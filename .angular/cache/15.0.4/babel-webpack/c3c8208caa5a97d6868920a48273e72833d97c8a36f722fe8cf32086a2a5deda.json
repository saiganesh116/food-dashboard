{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CactivateGuard {\n  canActivate(next, state) {\n    if (localStorage.getItem(\"uname\") == null && localStorage.getItem(\"pwd\") == null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\nCactivateGuard.ɵfac = function CactivateGuard_Factory(t) {\n  return new (t || CactivateGuard)();\n};\nCactivateGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CactivateGuard,\n  factory: CactivateGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,cAAc;EACzBC,WAAW,CACTC,IAA4B,EAC5BC,KAA0B;IAExB,IAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAE,IAAI,IAAID,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,IAAE,IAAI,EAAC;MAC1E,OAAO,KAAK;KACb,MACG;MACJ,OAAO,IAAI;;EAEf;;AAXWL,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAM,SAAdN,cAAc;EAAAO,YAFb;AAAM","names":["CactivateGuard","canActivate","next","state","localStorage","getItem","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ASUS\\AdminDashboards\\src\\app\\cactivate.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CactivateGuard implements CanActivate {\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree\n     {\n      if(localStorage.getItem(\"uname\")==null && localStorage.getItem(\"pwd\")==null){\n        return false\n      }\n      else{\n      return true;\n      }\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}